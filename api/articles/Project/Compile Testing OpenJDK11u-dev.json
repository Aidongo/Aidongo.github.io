{"title":"Compiler Testing OpenJDK","uid":"a37f6487303dd9ac4600a84c9410fc39","slug":"Project/Compile Testing OpenJDK11u-dev","date":"2023-04-12T01:50:00.000Z","updated":"2023-04-12T03:35:28.160Z","comments":true,"path":"api/articles/Project/Compile Testing OpenJDK11u-dev.json","keywords":null,"cover":"https://s2.loli.net/2023/04/12/vARHi2sdFJMYnIp.png","content":"<h2 id=\"System-Environment\"><a href=\"#System-Environment\" class=\"headerlink\" title=\"System Environment\"></a>System Environment</h2><table>\n<thead>\n<tr>\n<th>Distributor ID</th>\n<th align=\"left\">Ubuntu</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Description</strong></td>\n<td align=\"left\">Ubuntu 20.04.5 LTS</td>\n</tr>\n<tr>\n<td><strong>Release</strong></td>\n<td align=\"left\">20.04</td>\n</tr>\n<tr>\n<td><strong>Codename</strong></td>\n<td align=\"left\">focal</td>\n</tr>\n</tbody></table>\n<h2 id=\"Download-Source-Code\"><a href=\"#Download-Source-Code\" class=\"headerlink\" title=\"Download Source Code\"></a>Download Source Code</h2><p><a href=\"https://github.com/openjdk/jdk11u-dev\">OpenJDK11u-dev</a></p>\n<h2 id=\"Building-the-OpenJDK\"><a href=\"#Building-the-OpenJDK\" class=\"headerlink\" title=\"Building the OpenJDK\"></a>Building the OpenJDK</h2><p><a href=\"https://github.com/openjdk/jdk11u-dev/blob/master/doc/building.md\">Official Reference Document</a></p>\n<h3 id=\"1-Run-Configure\"><a href=\"#1-Run-Configure\" class=\"headerlink\" title=\"1. Run Configure\"></a>1. Run Configure</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo bash .&#x2F;configure -with-boot-jdk&#x3D;&#x2F;usr&#x2F;lib&#x2F;java&#x2F;jdk-11.0.17</code></pre>\n\n<h3 id=\"Exception-required-package-not-pre-installed\"><a href=\"#Exception-required-package-not-pre-installed\" class=\"headerlink\" title=\"Exception (required package not pre-installed)\"></a>Exception (required package not pre-installed)</h3><ul>\n<li><p><strong>configure: error: Could not find all X11 headers (shape.h Xrender.h Xrandr.h XTest.h Intrinsic.h).</strong></p>\n<ul>\n<li><p>Run <code>sudo apt-get install libXtst-devel libXt-devel libXrender-devel</code>   ⇒  E: Unable to locate package</p>\n</li>\n<li><p>Search for the corresponding package name on the <a href=\"http://packages.ubuntu.com/\">Ubuntu Package official website</a> and download it one by one</p>\n</li>\n<li><p><code>sudo apt-get install libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libxrandr-dev</code></p>\n</li>\n</ul>\n</li>\n<li><p><strong>configure: error: Could not find cups!</strong></p>\n<ul>\n<li>Run <code>sudo apt-get install libcups2-dev</code></li>\n</ul>\n</li>\n<li><p><strong>configure: error: Could not find fontconfig!</strong></p>\n<ul>\n<li>Install required packages: <code>sudo apt-get install libfontconfig1-dev</code></li>\n</ul>\n</li>\n<li><p><strong>configure: error: Could not find alsa!</strong></p>\n<ul>\n<li>Install required packages: <code>sudo apt-get install libasound2-dev</code></li>\n</ul>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/cyxinda/article/details/120782223\">Reference Blog</a></p></blockquote>\n<h3 id=\"2-Run-Make\"><a href=\"#2-Run-Make\" class=\"headerlink\" title=\"2. Run Make\"></a>2. Run Make</h3><p><code>sudo make all</code></p>\n<h2 id=\"Compile-JDK-with-Instrumentation-AFL\"><a href=\"#Compile-JDK-with-Instrumentation-AFL\" class=\"headerlink\" title=\"Compile JDK with Instrumentation (AFL)\"></a>Compile JDK with Instrumentation (AFL)</h2><ol>\n<li><p><strong>Compile the JDK to be fuzzed using afl-gcc</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;afl-gcc CXX&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;afl-g++ bash .&#x2F;configure --disable-warnings-as-errors\nmake all</code></pre>\n\n\n</li>\n<li><p><strong>Test Javac</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">afl-fuzz -i .&#x2F;fuzz-in -o .&#x2F;fuzz-out&#x2F;output03080022 -- &#x2F;home&#x2F;arbin0829&#x2F;Environment&#x2F;java&#x2F;jdk11u-dev-master&#x2F;build&#x2F;linux-x86_64-normal-server-release&#x2F;jdk&#x2F;bin&#x2F;javac @@</code></pre></li>\n</ol>\n<h2 id=\"Preparing-the-input-corpus\"><a href=\"#Preparing-the-input-corpus\" class=\"headerlink\" title=\"Preparing the input corpus\"></a>Preparing the input corpus</h2><p>Preparing the input corpus is a crucial step in the fuzz testing process, as it directly affects the coverage and effectiveness of the testing. For this project, I will take the following steps to prepare the input corpus:</p>\n<h3 id=\"1-Known-valid-input-files\"><a href=\"#1-Known-valid-input-files\" class=\"headerlink\" title=\"1. Known valid input files\"></a>1. Known valid input files</h3><p>Collect Java program code from multiple open-source projects as input files, such as Apache Tomcat, Spring Framework, JMeter, etc. </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>These codes have undergone extensive testing and optimization and can be successfully compiled by the Java compiler.</p></blockquote>\n<h3 id=\"2-Invalid-input-files\"><a href=\"#2-Invalid-input-files\" class=\"headerlink\" title=\"2. Invalid input files\"></a>2. Invalid input files</h3><p>Manually write or use automated tools to generate some Java code that does not conform to Java compiler specifications or contains syntax errors.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>such as using undefined variables or syntax error code segments.</p></blockquote>\n<h3 id=\"3-Collect-code-that-may-cause-the-compiler-to-crash-or-behave-abnormally\"><a href=\"#3-Collect-code-that-may-cause-the-compiler-to-crash-or-behave-abnormally\" class=\"headerlink\" title=\"3. Collect code that may cause the compiler to crash or behave abnormally\"></a>3. Collect code that may cause the compiler to crash or behave abnormally</h3><p>Collect some known malicious code or test cases from academic research papers or test suites. </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>These codes contain various abnormal behaviors, such as buffer overflow, infinite loops, etc.</p></blockquote>\n<h3 id=\"4-Generate-input-files-automatically\"><a href=\"#4-Generate-input-files-automatically\" class=\"headerlink\" title=\"4. Generate input files automatically\"></a>4. Generate input files automatically</h3><p>Use some tools to automatically generate Java code files, such as using Java code generators, random string generators, etc.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>This can quickly generate a large number of input files to increase the coverage of testing.</p></blockquote>\n","feature":true,"text":"System Environment Distributor ID Ubuntu Description Ubuntu 20.04.5 LTS Release 20.04 Codename focal Download Source CodeOpenJDK11u-dev Buil...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Project","slug":"Project","count":1,"path":"api/categories/Project.json"}],"tags":[{"name":"Compiler Testing","slug":"Compiler-Testing","count":1,"path":"api/tags/Compiler-Testing.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#System-Environment\"><span class=\"toc-text\">System Environment</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Download-Source-Code\"><span class=\"toc-text\">Download Source Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Building-the-OpenJDK\"><span class=\"toc-text\">Building the OpenJDK</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Run-Configure\"><span class=\"toc-text\">1. Run Configure</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Exception-required-package-not-pre-installed\"><span class=\"toc-text\">Exception (required package not pre-installed)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Run-Make\"><span class=\"toc-text\">2. Run Make</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Compile-JDK-with-Instrumentation-AFL\"><span class=\"toc-text\">Compile JDK with Instrumentation (AFL)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Preparing-the-input-corpus\"><span class=\"toc-text\">Preparing the input corpus</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Known-valid-input-files\"><span class=\"toc-text\">1. Known valid input files</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Invalid-input-files\"><span class=\"toc-text\">2. Invalid input files</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Collect-code-that-may-cause-the-compiler-to-crash-or-behave-abnormally\"><span class=\"toc-text\">3. Collect code that may cause the compiler to crash or behave abnormally</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-Generate-input-files-automatically\"><span class=\"toc-text\">4. Generate input files automatically</span></a></li></ol></li></ol>","author":{"name":"ARBIN","slug":"arbin","avatar":"https://s2.loli.net/2023/04/04/dZv3NaCepc7X4MO.jpg","link":"/","description":"立志成为潮流研究生","socials":{"github":"https://github.com/Aidongo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"Notion":{"icon":"/svg/notion_black_logo_icon_147102.png","link":"https://arbin29.notion.site/ARBIN-HomePage-641b7c55779f4920869022cad678e8a5"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"LeetCode 数组","uid":"a82004346219b89210300085e2164ae5","slug":"面试攻略/数组","date":"2023-04-04T01:37:00.000Z","updated":"2023-04-04T01:46:00.260Z","comments":true,"path":"api/articles/面试攻略/数组.json","keywords":null,"cover":[],"text":"数组理论基础概念：数组是存放在连续内存空间上的相同类型数据的集合 字符数组例子： 数组下标都是从0开始的。 数组内存空间的地址是连续的 二维数组 Java的二维数组在内存中不是 3*4 的连续地址空间，而是四条连续的地址空间组成 704. 二分查找题目给定一个 n 个元素有序的（...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":1,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"数组","slug":"数组","count":1,"path":"api/tags/数组.json"}],"author":{"name":"ARBIN","slug":"arbin","avatar":"https://s2.loli.net/2023/04/04/dZv3NaCepc7X4MO.jpg","link":"/","description":"立志成为潮流研究生","socials":{"github":"https://github.com/Aidongo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"Notion":{"icon":"/svg/notion_black_logo_icon_147102.png","link":"https://arbin29.notion.site/ARBIN-HomePage-641b7c55779f4920869022cad678e8a5"}}}},"feature":true}}