{"title":"SSql Language","uid":"1bf705b8c909d15201118f0311dec3fe","slug":"Kings/SSql Introduction","date":"2023-04-03T00:47:00.000Z","updated":"2023-04-03T03:15:35.138Z","comments":true,"path":"api/articles/Kings/SSql Introduction.json","keywords":null,"cover":"https://s2.loli.net/2023/04/03/vXmCDUSaoq1cGwt.png","content":"<h1 id=\"SSql-Language-Simplified-SQL-and-Data-Analysis-Language-📊\"><a href=\"#SSql-Language-Simplified-SQL-and-Data-Analysis-Language-📊\" class=\"headerlink\" title=\"SSql Language: Simplified SQL and Data Analysis Language 📊\"></a>SSql Language: Simplified SQL and Data Analysis Language 📊</h1><p><strong>Group Member</strong></p>\n<p><strong>Ruibin Zhu , Chenhui Liu</strong></p>\n<h2 id=\"Project-Overview\"><a href=\"#Project-Overview\" class=\"headerlink\" title=\"Project Overview\"></a>Project Overview</h2><p>SSql is a simplified SQL and data analysis Domain Specific Language (DSL) designed to simplify tasks such as database querying, data analysis, data cleaning, and generating statistical charts. With a concise syntax defined using Xtext, users can easily create and execute complex queries without needing to understand the intricacies of underlying database technologies.</p>\n<p>SSql supports the following types of statements:</p>\n<ul>\n<li>ConnectStatement: Connect to a database</li>\n<li>QueryStatement: Execute queries</li>\n<li>StatisticStatement: Generate statistical charts</li>\n<li>VariableDeclaration: Define query variables</li>\n<li>CheckStatement: Check specific database objects</li>\n</ul>\n<p>The following sections will provide instructions on how to set up the environment for using SSql, how to run the project, and how to use the SSql language for query and data analysis tasks.</p>\n<h2 id=\"Environment-Setup\"><a href=\"#Environment-Setup\" class=\"headerlink\" title=\"Environment Setup\"></a>Environment Setup</h2><p>The environment required for running this project is Eclipse IDE. Additional modelling and plugin support are required. For more information on the required dependencies, refer to this <a href=\"https://emckclac-my.sharepoint.com/personal/k1074611_kcl_ac_uk/_layouts/15/onedrive.aspx?id=/personal/k1074611_kcl_ac_uk/Documents/Lehre/Kings/7CCSMMDD/2021-22/Eclipse%20Installations&ga=1\">page</a> (King’s internal credentials required).</p>\n<p>Please note that Java 11 or higher is required to run this project.</p>\n<p>Some of the above folder projects are intended to live in the base Eclipse environment, while others are created for Runtime Eclipse. The following list displays this separation:</p>\n<p><strong>Xtext Project</strong></p>\n<ul>\n<li>uk.ac.kcl.mmd.group39. SSql </li>\n<li>uk.ac.kcl.mmd.group39. SSql.ide </li>\n<li>uk.ac.kcl.mmd.group39. SSql.tests </li>\n<li>uk.ac.kcl.mmd.group39. SSql.ui </li>\n<li>uk.ac.kcl.mmd.group39. SSql.ui.tests</li>\n</ul>\n<p><strong>Runtime Eclipse:</strong></p>\n<ul>\n<li>TestSSql (providing sample .SSql files with corresponding generated code) </li>\n<li>uk.ac.kcl.mmd.group39.ssql.library (A collection of utility classes and methods supporting the SSql language) </li>\n<li>uk.ac.kcl.mmd.group39.SSql.xpect (tests for the language)</li>\n</ul>\n<h2 id=\"Sample-Database\"><a href=\"#Sample-Database\" class=\"headerlink\" title=\"Sample Database\"></a>Sample Database</h2><h3 id=\"Microsoft-Northwind-Trader-Database\"><a href=\"#Microsoft-Northwind-Trader-Database\" class=\"headerlink\" title=\"Microsoft Northwind Trader Database\"></a><a href=\"https://code.google.com/archive/p/northwindextended/\">Microsoft Northwind Trader Database</a></h3><p>The project aim to port northwind database from MS SQL 2005 to MySQL,Oracle,PostGreSQL,Sqlite,VistaDB with Tables,Views,Triggers,User Defined Function,Stored Procedure that simulation similary into all databases that include some functions that are available to only advanced databases with simulation and schema readers.</p>\n<h2 id=\"Running-the-Project\"><a href=\"#Running-the-Project\" class=\"headerlink\" title=\"Running the Project\"></a>Running the Project</h2><h3 id=\"Xtext-Project\"><a href=\"#Xtext-Project\" class=\"headerlink\" title=\"Xtext Project\"></a>Xtext Project</h3><ol>\n<li>After installing the required dependencies, clone this repository into an Eclipse workspace.</li>\n<li>Navigate to <code>uk.ac.kcl.mmd.group39.SSql</code> and open the <code>SSql.xtext</code> file.</li>\n<li>Right-click anywhere in the file and choose <code>Run As &gt; Generate Xtext Artifacts</code>.</li>\n<li>Wait for the artifacts to generate, and then launch Runtime Eclipse by right-clicking on the <code>uk.ac.kcl.mmd.group39.SSql</code> project and choosing <code>Run As &gt; Eclipse Application</code>.</li>\n</ol>\n<h3 id=\"Run-Time-Eclipse-Xtext-Environment\"><a href=\"#Run-Time-Eclipse-Xtext-Environment\" class=\"headerlink\" title=\"Run Time - Eclipse Xtext Environment\"></a>Run Time - Eclipse Xtext Environment</h3><ol>\n<li>In Runtime Eclipse import the trhee projects from above <ul>\n<li><code>TestSSq</code></li>\n<li><code>uk.ac.kcl.mmd.group39.SSql.xpect</code></li>\n<li><code>uk.ac.kcl.mmd.group39.ssql.library</code></li>\n</ul>\n</li>\n<li>Build Path with library project <ul>\n<li>Right-click TestSSql project choose <code>Buil Path &gt; Configure Build Path... &gt; Projects &gt; Add</code> , then choose the <code>uk.ac.kcl.mmd.group39.ssql.library</code></li>\n</ul>\n</li>\n<li>Import dependency packages<ul>\n<li>Import Right-click <code>TestSSql/lib</code> project choose <code>Buil Path &gt; Configure Build Path... &gt; Libraries &gt; Add JARs</code> , then add the following jars:<ul>\n<li>jcommon-1.0.24.jar</li>\n<li>jfreechart-1.5.3.jar</li>\n<li>mysql-connector-j-8.0.32.jar</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Sample can already be found in the <code>src</code> folder of the <code>TestSsql.SSql</code></li>\n<li>To create a new SSql , right-click on the <code>src</code> folder of <code>TestSSql</code> project and choose <code>New &gt; File</code>.<ul>\n<li>The file extension for SSql is <code>.SSql</code>.</li>\n</ul>\n</li>\n<li>Write the contract code and hit <code>Ctrl + S</code> to save it. This action will automatically create a <code>.java</code> file and place it in the <code>src-gen</code> folder. This file will contain the generated Java code.</li>\n</ol>\n<h2 id=\"Using-SSql-Language\"><a href=\"#Using-SSql-Language\" class=\"headerlink\" title=\"Using SSql Language\"></a>Using SSql Language</h2><p>To use the SSql language, start by creating a <code>.SSql</code> file. In this file, you can write SSql queries and data analysis tasks. Here’s a simple example:</p>\n<h3 id=\"1-Connect-Statement\"><a href=\"#1-Connect-Statement\" class=\"headerlink\" title=\"1. Connect Statement\"></a>1. Connect Statement</h3><p>Establish a connection to a MySQL database using the <code>CONNECT</code> statement with a JDBC connection string, username, and password.</p>\n<p><strong>Before all operations, you must first use this statement to establish a connection to the database</strong></p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CONNECT(&#39;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;northwind&#39;,&#39;username&#39;,&#39;password&#39;)</code></pre>\n\n<h3 id=\"2-Query-Statement\"><a href=\"#2-Query-Statement\" class=\"headerlink\" title=\"2. Query Statement\"></a>2. Query Statement</h3><p>Retrieve all records from the <code>orders</code> table using the <code>SELECT</code> statement:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">&#x2F;&#x2F; Query Statement\nSELECT * FROM orders</code></pre>\n\n<h3 id=\"3-Statistic-Statement\"><a href=\"#3-Statistic-Statement\" class=\"headerlink\" title=\"3. Statistic Statement\"></a>3. Statistic Statement</h3><p>Generate a bar chart with a title, X and Y labels, and data based on a query:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeSTATS CHART BAR &#123;\n\tTitle: &quot;ShipVia&quot;;\n\tXLabel: &quot;Count&quot;;\n\tYLabel: &quot;Y&quot;;\n\tData: (SELECT orders.ShipVia, SUM(orderdetails.UnitPrice * orderdetails.Quantity * (1 - orderdetails.Discount)) FROM orders JOIN orderdetails ON orders.OrderID &#x3D; orderdetails.OrderID  BY orders.ShipVia);\n&#125;</code></pre>\n\n<h3 id=\"4-VariableDeclaration\"><a href=\"#4-VariableDeclaration\" class=\"headerlink\" title=\"4. VariableDeclaration\"></a>4. VariableDeclaration</h3><p>Store the result of a query in a variable for reuse:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">VAR data4ShipVia &#x3D; (SELECT orders.ShipVia, SUM(orderdetails.UnitPrice * orderdetails.Quantity * (1 - orderdetails.Discount)) FROM orders JOIN orderdetails ON orders.OrderID &#x3D; orderdetails.OrderID  BY orders.ShipVia)</code></pre>\n\n<h2 id=\"5-Statistic-Statement-with-Variable\"><a href=\"#5-Statistic-Statement-with-Variable\" class=\"headerlink\" title=\"5. Statistic Statement with Variable\"></a>5. Statistic Statement with Variable</h2><p>Generate bar and line charts using the data stored in a variable:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeSTATS CHART BAR &#123;\n\tTitle: &quot;ShipVia&quot;;\n\tXLabel: &quot;Count&quot;;\n\tYLabel: &quot;Y&quot;;\n\tData: (data4ShipVia);\n&#125;\n\nSTATS CHART LINE &#123;\n\tTitle: &quot;ShipVia&quot;;\n\tXLabel: &quot;Count&quot;;\n\tYLabel: &quot;Y&quot;;\n\tData: (data4ShipVia);\n&#125;</code></pre>\n\n\n\n<h2 id=\"6-Data-Cleaning\"><a href=\"#6-Data-Cleaning\" class=\"headerlink\" title=\"6. Data Cleaning\"></a>6. Data Cleaning</h2><p>Perform data cleaning operations on the <code>products</code> table:</p>\n<ul>\n<li>Find duplicates:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeSTATS CLEAN &#123;\n\tTable: &quot;products&quot;\n\tColumn: &quot;UnitPrice&quot;\n\tFunction: FIND_DUPLICATES\n&#125;</code></pre>\n\n<ul>\n<li>Find missing values:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeSTATS CLEAN &#123;\n\tTable: &quot;products&quot;\n\tColumn: &quot;UnitPrice&quot;\n\tFunction: FIND_MISSING_VALUES\n&#125;</code></pre>\n\n<ul>\n<li>Find missing values and fill with the mean:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeSTATS CLEAN &#123;\n\tTable: &quot;products&quot;\n\tColumn: &quot;UnitPrice&quot;\n\tFunction: FIND_MISSING_VALUES\n\tSolution: FILL_IN_MEAN\n&#125;</code></pre>\n\n<h2 id=\"7-Check-Statements\"><a href=\"#7-Check-Statements\" class=\"headerlink\" title=\"7. Check Statements\"></a>7. Check Statements</h2><p>Perform various checks on customers and products:</p>\n<ul>\n<li>Check a customer’s billing information:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeCHECK Customer &#123;\n\tID: &quot;ALFKI&quot;\n\tType: BillAll\n&#125;\n\nCHECK Customer &#123;\n\tID: &quot;ALFKI&quot;\n\tType: Bill\n\tDate: 1994-07-15 to 1995-07-15\n&#125;</code></pre>\n\n<ul>\n<li>Check product information and sales:</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlCopy codeCHECK Product &#123;\n\tID: &quot;3&quot;\n\tType: ProductInfo\n&#125;\n\nCHECK Product &#123;\n\tType: TopSale\n\tDate: 1996-07-15 to 2000-07-15\n\tLimit: 1\n&#125;\n\nCHECK Product &#123;\n\tCategoryName: &quot;Beverages&quot;\n\tType: GroupCategory\n&#125;</code></pre>\n\n<p>These use cases provide a solid understanding of the various capabilities of the SSql language and how to use them in practice.</p>\n<p>In this example, we first connect to the database, then query all data from the <code>employees</code> table, and generate a bar chart displaying the salaries of employees.</p>\n<p>To execute the SSql code, save the <code>.ssql</code> file. This will automatically generate the corresponding Java or other target language code, which you can copy into the appropriate project to run.</p>\n<h2 id=\"Future-Improvements\"><a href=\"#Future-Improvements\" class=\"headerlink\" title=\"Future Improvements\"></a>Future Improvements</h2><p>While SSql already offers a wide range of features to simplify data analysis and visualization tasks, there is potential for future improvements to make the language even more powerful and user-friendly. Some possible enhancements include:</p>\n<ol>\n<li><strong>More Visualization Options</strong>: Expand the variety of available chart types (e.g., scatter plots, bubble charts, heatmaps) and customization options (e.g., colors, fonts, legend placement) to provide users with more flexibility in data visualization.</li>\n<li><strong>Support for Additional Database Systems</strong>: Broaden the range of supported databases, such as PostgreSQL, Oracle, and MongoDB, to make SSql more versatile for different projects and environments.</li>\n<li><strong>Enhanced Data Cleaning Features</strong>: Implement more advanced data cleaning functions, such as outlier detection and handling, data normalization, and pattern recognition.</li>\n<li><strong>Improved Error Handling and Debugging</strong>: Provide more detailed error messages and debugging tools to help users identify and resolve issues more efficiently.</li>\n<li><strong>Integration with Data Analysis Libraries</strong>: Integrate popular data analysis libraries (e.g., pandas, NumPy) to further expand SSql’s analytical capabilities.</li>\n<li><strong>User Interface Improvements</strong>: Develop a dedicated graphical user interface (GUI) or plugins for popular IDEs to streamline the SSql development process.</li>\n<li><strong>Support for Real-Time Data Analysis</strong>: Enable real-time data analysis and visualization by incorporating support for streaming data sources and dynamic chart updates.</li>\n<li><strong>Performance Optimization</strong>: Optimize the performance of SSql to handle large datasets and complex queries more efficiently.</li>\n</ol>\n<p>By incorporating these improvements, SSql can continue to evolve and cater to the growing needs of users in the field of data analysis and visualization.</p>\n","feature":true,"text":"SSql Language: Simplified SQL and Data Analysis Language 📊Group Member Ruibin Zhu , Chenhui Liu Project OverviewSSql is a simplified SQL and...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"King's College London","slug":"King-s-College-London","count":1,"path":"api/categories/King-s-College-London.json"}],"tags":[{"name":"Coursework","slug":"Coursework","count":1,"path":"api/tags/Coursework.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SSql-Language-Simplified-SQL-and-Data-Analysis-Language-%F0%9F%93%8A\"><span class=\"toc-text\">SSql Language: Simplified SQL and Data Analysis Language 📊</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Project-Overview\"><span class=\"toc-text\">Project Overview</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Environment-Setup\"><span class=\"toc-text\">Environment Setup</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sample-Database\"><span class=\"toc-text\">Sample Database</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Microsoft-Northwind-Trader-Database\"><span class=\"toc-text\">Microsoft Northwind Trader Database</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Running-the-Project\"><span class=\"toc-text\">Running the Project</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Xtext-Project\"><span class=\"toc-text\">Xtext Project</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Run-Time-Eclipse-Xtext-Environment\"><span class=\"toc-text\">Run Time - Eclipse Xtext Environment</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Using-SSql-Language\"><span class=\"toc-text\">Using SSql Language</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Connect-Statement\"><span class=\"toc-text\">1. Connect Statement</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Query-Statement\"><span class=\"toc-text\">2. Query Statement</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Statistic-Statement\"><span class=\"toc-text\">3. Statistic Statement</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-VariableDeclaration\"><span class=\"toc-text\">4. VariableDeclaration</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-Statistic-Statement-with-Variable\"><span class=\"toc-text\">5. Statistic Statement with Variable</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-Data-Cleaning\"><span class=\"toc-text\">6. Data Cleaning</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-Check-Statements\"><span class=\"toc-text\">7. Check Statements</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Future-Improvements\"><span class=\"toc-text\">Future Improvements</span></a></li></ol></li></ol>","author":{"name":"ARBIN","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"立志成为潮流研究生","socials":{"github":"https://github.com/Aidongo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"计算机网络","uid":"293c17b4d2a4292133cc4d1ffd7f8725","slug":"Computer Basis/计算机网络知识点","date":"2023-04-03T16:35:00.000Z","updated":"2023-04-03T16:43:05.905Z","comments":true,"path":"api/articles/Computer Basis/计算机网络知识点.json","keywords":null,"cover":[],"text":"相关博客 一、体系结构 OSI 七层模型 TCP&#x2F;IP 四层模型 TCP&#x2F;IP 五层模型 ​ 1.物理层 数据传输单位： 比特（bit） 作用： 激活、维持、关闭通信端点之间的机械特性、电气特性、功能特性以及过程特性 设备： 中继器、集线器 2.数据链路层 数...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"计算机基础","slug":"计算机基础","count":2,"path":"api/categories/计算机基础.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":1,"path":"api/tags/计算机网络.json"}],"author":{"name":"ARBIN","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"立志成为潮流研究生","socials":{"github":"https://github.com/Aidongo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}